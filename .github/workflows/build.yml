name: build

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * fri"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        run: |
          # Convert All LF to CRLF, UTF-8 to GBK
          function unix2dos(){
            file="$1"
            echo "Processing '$file' ..."
            iconv -f UTF-8 -t GBK -c "$file" > tmp
            vim tmp -c "set ff=dos" -c ":wq"
            mv -f tmp "$file"
          }
          for el in `ls scripts/*.bat`
          do
            unix2dos "$el"
          done
      - name: Download and Uncompress
        run: |
          clash=$(
            curl -s 'https://api.github.com/repos/MetaCubeX/mihomo/releases/latest' | \
            python -c "import sys, json; src=json.load(sys.stdin); urls=[i['browser_download_url'] for i in src['assets'] if i['name'].find('windows-amd64-v3') > -1]; print(src['tag_name'] + ';' + urls[0])"
            )
          echo $clash
          release_mark=$(echo $clash|cut -d ";" -f 1)
          release_title="SlimClash ${release_mark}.zip"
          
          RELEASE_DESC="> Based on Clash.Meta ${release_mark}, only packaged version amd64 for Windows.
          ## Related Links
          - [Original Release](https://github.com/MetaCubeX/mihomo/releases/latest)
          - [Dashboard Repo](https://github.com/MetaCubeX/metacubexd)
          - [GeoIP 规则文件加强版](https://github.com/Loyalsoldier/geoip)"
          
          echo 'RELEASE_DESC<<EOF' >> $GITHUB_ENV
          echo "$RELEASE_DESC" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "RELEASE_TITLE=$release_title" >> $GITHUB_ENV

          curl -Loclash.zip $(echo $clash | cut -d ";" -f 2)
          # curl -Loclash.zip https://github.com/coo11/SlimClash/releases/download/runaway/clash-premium-windows-amd64_2023-9-20.zip
          7z x clash.zip # clash.zip/mihomo-windows-amd64.exe
          curl -Lodashboard.zip https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip
          # curl -Lodashboard.zip https://github.com/coo11/SlimClash/releases/download/runaway/clash-dashboard-gh-pages.zip
          7z x dashboard.zip
          curl -Logeosite https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/release/geosite.dat
          curl -Logeoip https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country-only-cn-private.mmdb
          curl -Loasn https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb
          curl -Lowt.zip https://github.com/coo11/SlimClash/releases/download/wintools/win_tools.zip
          7z x wt.zip
      - name: Compile config.js
        run: |
          curl -Loqjscu.zip https://github.com/coo11/SlimClash/releases/download/quickjs/qjsc_utils.zip
          7z x qjscu.zip
          cd qjsc_utils
          chmod +x *
          sudo apt-get update
          sudo apt-get install mingw-w64
          ./pack.sh ../config.js
      - name: Pack related files
        run: |
          mkdir -p SlimClash/.clash/dashboard/../ruleset/../../.utils/
          mv "$(ls -t mihomo-windows-amd64*.exe | head -n1)" SlimClash/clash.exe
          mv metacubexd-gh-pages/ -T SlimClash/.clash/dashboard/
          mv geosite SlimClash/.clash/GeoSite.dat
          mv geoip SlimClash/.clash/geoip.metadb
          mv asn SlimClash/.clash/ASN.mmdb
          
          pip install pyyaml
          python _parser.py
          
          vim output.yaml -c "set ff=dos" -c ":wq"
          mv output.yaml SlimClash/.clash/config.yaml
          mv *.yaml -t SlimClash/.clash/ruleset/
          cp qjsc_utils/qjs.dll qjsc_utils/config.exe win_tools/* -t SlimClash/.utils/
          cp src/icon.ico SlimClash/icon.ico
          cp scripts/*.bat scripts/*.vbs -t SlimClash/
          
          7z a -mm=Deflate -mfb=258 -mpass=15 -r SlimClash_rs.zip SlimClash/
          rm -rf SlimClash/.clash/ruleset/*.yaml
          7z a -mm=Deflate -mfb=258 -mpass=15 -r SlimClash.zip SlimClash/
      - name: Update Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: weeklybuild
          prerelease: false
          name: ${{ env.RELEASE_TITLE }}
          body: ${{ env.RELEASE_DESC }}
          files: SlimClash*.zip
